(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{63:function(t,s,a){"use strict";a.r(s);var n={props:["slot-key"],mounted(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},e=a(1),v=Object(e.a)(n,function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.slotKey}},[a("h1",{attrs:{id:"_3-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-基本概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 基本概念")]),t._v(" "),a("h2",{attrs:{id:"_3-5-操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.5 操作符")]),t._v(" "),a("h3",{attrs:{id:"_3-5-5-加性操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-5-加性操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.5.5 加性操作符")]),t._v(" "),a("blockquote",[a("p",[t._v("1.加法")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("操作数有一个是NaN，则结果为NaN")])]),t._v(" "),a("li",[a("code",[t._v("Infinity + Infinity => Infinity")])]),t._v(" "),a("li",[a("code",[t._v("-Infinity + -Infinity => -Infinity")])]),t._v(" "),a("li",[a("code",[t._v("Infinity + -Infinity => NaN")])]),t._v(" "),a("li",[a("code",[t._v("+0 + +0 => +0")])]),t._v(" "),a("li",[a("code",[t._v("-0 + -0 => -0")])]),t._v(" "),a("li",[a("code",[t._v("+0 + -0 => +0")])])]),t._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提醒")]),t._v(" "),a("p",[t._v("⚠️如果有一个是字符串，则运用如下规则: "),a("br"),t._v(" "),a("code",[t._v("如果两个操作数都是字符串，则将第一个和第二个操作数连接起来.")]),a("br"),t._v(" "),a("code",[t._v("如果有一个操作数是字符串，则将另一个操作数转换为字符串，然后连接起来.")]),a("br")]),t._v(" "),a("p",[t._v("如果有一个是"),a("code",[t._v("对象、数值或布尔值")]),t._v("，则先调用他们的"),a("code",[t._v("toString()")]),t._v("方法取得相应的字符串值，然后在应用前面关于字符串的规则"),a("br")]),t._v(" "),a("p",[t._v("对于"),a("code",[t._v("undefined")]),t._v("和"),a("code",[t._v("null")]),t._v("，则分别调用"),a("code",[t._v("String()")]),t._v("函数并取得字符串"),a("code",[t._v('"undefined"')]),t._v("和"),a("code",[t._v('"null"')])])]),t._v(" "),a("br"),t._v(" "),a("blockquote",[a("p",[t._v("2.减法")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("操作数有一个是NaN，则结果为NaN")])]),t._v(" "),a("li",[a("code",[t._v("Infinity - Infinity => NaN")])]),t._v(" "),a("li",[a("code",[t._v("-Infinity - -Infinity => NaN")])]),t._v(" "),a("li",[a("code",[t._v("Infinity - -Infinity => Infinity")])]),t._v(" "),a("li",[a("code",[t._v("-Infinity - Infinity => -Infinity")])]),t._v(" "),a("li",[a("code",[t._v("+0 - +0 = +0")])]),t._v(" "),a("li",[a("code",[t._v("-0 - 0 = -0")])]),t._v(" "),a("li",[a("code",[t._v("-0 - -0 = +0")])])]),t._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提醒")]),t._v(" "),a("p",[t._v("⚠️如果有一个操作数是"),a("code",[t._v("字符串、布尔值、null 或 undefined")]),t._v("，则先在后台调用"),a("code",[t._v("Number()")]),t._v("函数将其转换为数值，\n然后再根据上面的规则执行计算。如果转换结果是"),a("code",[t._v("NaN")]),t._v("，则减法结果为NaN"),a("br")]),t._v(" "),a("p",[t._v("⚠️如果有一个操作数是"),a("code",[t._v("对象")]),t._v("，则调用对象的"),a("code",[t._v("valueOf()")]),t._v("方法以取得表示该对象的数值。如果得到的是NaN，则减法结果为NaN，如果对象"),a("code",[t._v("没有 valueOf()")]),t._v("方法，则调用其"),a("code",[t._v("toString()")]),t._v("方法并得到字符串转换为数值")])]),t._v(" "),a("h3",{attrs:{id:"_3-5-6-关系操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-6-关系操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.5.6 关系操作符")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("如果两个操作数都是数值，则执行数值比较。")])]),t._v(" "),a("li",[a("code",[t._v("如果两个操作数都是字符串，则比较两个字符串对应的")]),a("import",{attrs:{text:"字符串编码值"}})],1),t._v(" "),a("li",[a("code",[t._v("如果一个操作数都是数值，则将另一个操作数转换为一个数值，然后执行数值比较")])]),t._v(" "),a("li",[a("code",[t._v("如果一个操作数是对象，则先调用他的 valueOf() 方法，用得到的结果按前面的规则执行比较。如果没有valueOf() 方法，则调用 toString() 方法，并用得到的结果根据前面的规则进行比较")])]),t._v(" "),a("li",[a("code",[t._v("如果一个操作数是布尔值，则先将其指转换为数值，在进行比较")])])]),t._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提醒")]),t._v(" "),a("p",[t._v("⚠️任何数和NaN比较，结果都是NaN")])]),t._v(" "),a("h3",{attrs:{id:"_3-5-7-相等操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-7-相等操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.5.7 相等操作符")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("相等与不想等")]),t._v(" "),a("p",[a("code",[t._v("== 和 != 都会发生类型转换")])]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("如果有一个操作数是布尔值，则在比较相等性之前先将其转换为数值---"),a("code",[t._v("false")]),t._v(" 转为 0， "),a("code",[t._v("true")]),t._v(" 转为 1")]),t._v(" "),a("li",[t._v("如果一个操作数为字符串，另一个为数值，在比较相等性之前先将字符串转换为数值")]),t._v(" "),a("li",[t._v("如果一个操作数是对象，另一个不是，则调用对象的"),a("code",[t._v("valueOf()")]),t._v("方法，用得到的基本类型值按前面的规则比较")])])]),t._v(" "),a("p",[a("code",[t._v("两个操作符进行比较时")])]),t._v(" "),a("blockquote",[a("ul",[a("li",[a("code",[t._v("null")]),t._v("和"),a("code",[t._v("undefined")]),t._v(" 是"),a("import",{attrs:{text:"相等的"}})],1),t._v(" "),a("li",[t._v("要比较相等性之前，"),a("import",{attrs:{text:"不能"}}),t._v("将"),a("code",[t._v("null")]),t._v("和"),a("code",[t._v("undefined")]),a("import",{attrs:{text:"转换成其他任何值"}})],1),t._v(" "),a("li",[t._v("如果有一个操作数是"),a("code",[t._v("NaN")]),t._v("，\b则相等操作符返回"),a("code",[t._v("false")]),t._v("，而不相等操作符返回"),a("code",[t._v("false")]),t._v(" "),a("import",{attrs:{text:"重要提示："}}),t._v(" 即使两个操作数都是NaN，则相等操作符也返回NaN。"),a("import",{attrs:{text:"因为 NaN 不等于 NaN"}})],1),t._v(" "),a("li",[t._v("如果两个操作数都是对象，则比较他们是不是同一个对象。如果两个操作数都"),a("import",{attrs:{text:"指向同一个对象"}}),t._v("，则相等返回"),a("code",[t._v("true")]),t._v("，否则返回"),a("code",[t._v("false")])],1)])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("表达式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("值")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("表达式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("null == undefined")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true == 1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v('"NaN" == NaN')]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true == 2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("5 == NaN")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("undefined == 0")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("NaN == NaN")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("null == 0")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("NaN != NaN")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v('"5" == 5')]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("false == 0")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})])])])]),t._v(" "),a("li",[a("p",[t._v("全等和不全等")]),t._v(" "),a("p",[a("code",[t._v("=== 和 !== 不会发生类型转换")])]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("建议")]),t._v(" "),a("p",[t._v("因为全等和不全等不会发生类型转换，所以建议在代码中尽量使用全等与不全等")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-5-8-条件操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-8-条件操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.5.8 条件操作符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("variable "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" boolean_expression "),a("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" true_value "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" false_value\n")])])]),a("h3",{attrs:{id:"_3-5-9-赋值操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-9-赋值操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.5.9 赋值操作符")]),t._v(" "),a("ul",[a("li",[t._v("乘/赋值 ( "),a("import",{attrs:{text:"*="}}),t._v(" )")],1),t._v(" "),a("li",[t._v("除/赋值 ( "),a("import",{attrs:{text:"/="}}),t._v(" )")],1),t._v(" "),a("li",[t._v("模/赋值 ( "),a("import",{attrs:{text:"%="}}),t._v(" )")],1),t._v(" "),a("li",[t._v("加/赋值 ( "),a("import",{attrs:{text:"+="}}),t._v(" )")],1),t._v(" "),a("li",[t._v("减/赋值 ( "),a("import",{attrs:{text:"-="}}),t._v(" )")],1),t._v(" "),a("li",[t._v("左移/赋值 ( "),a("import",{attrs:{text:"<<="}}),t._v(" )")],1),t._v(" "),a("li",[t._v("有符号右移/赋值 ( "),a("import",{attrs:{text:">>="}}),t._v(" )")],1),t._v(" "),a("li",[t._v("无符号右移/赋值 ( "),a("import",{attrs:{text:">>>="}}),t._v(" )")],1)]),t._v(" "),a("h2",{attrs:{id:"_3-6-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-语句","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.6 语句")]),t._v(" "),a("h3",{attrs:{id:"_3-6-5-for-in语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-5-for-in语句","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.6.5 for-in语句")]),t._v(" "),a("blockquote",[a("p",[t._v("for-in 语句是一种精准的迭代语句，可以用来枚举对象的属性")])]),t._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提醒")]),t._v(" "),a("ol",[a("li",[t._v("如果表示要迭代的对象的变量值为 "),a("code",[t._v("null")]),t._v(" 或 "),a("code",[t._v("undefined")]),t._v("，for-in 语句会抛出异常。ES5 更正了这一行为，对这种情况抛出错误，而是不执行循环体")]),t._v(" "),a("li",[t._v("为了保证最大限度的兼容性，建议在使用 for-in 循环之前，先检查确认该对象的值不是 "),a("code",[t._v("null")]),t._v(" 或 "),a("code",[t._v("undefined")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-6-6-label语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-6-label语句","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.6.6 label语句")]),t._v(" "),a("blockquote",[a("p",[t._v("使用 label 语句可以在代码中添加标签，以便将来使用。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("label"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" statement\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// eg:")]),t._v("\nstart"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// start 标签可以在将来由 break 或 continue 语句引用。加标签的语句一般要与 for 语句等循环语句配合使用")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-6-7-break和continue语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-7-break和continue语句","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.6.7 break和continue语句")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("break")]),t._v(" 和 "),a("code",[t._v("continue")]),t._v(" 语句用于在循环中精确地控制代码的执行。"),a("br"),t._v(" "),a("code",[t._v("break")]),t._v(" 语句会立即退出循环后面的语句。而 "),a("code",[t._v("continue")]),t._v(" 语句虽然也是立即退出循环，但退出循环后会从循环对的顶部继续执行")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// break & label")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\noutermost"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" j "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("break")]),t._v(" outermost"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    num"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 55")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\noutermost"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" j "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("continue")]),t._v(" outermost"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    num"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 95")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-6-8-with语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-8-with语句","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.6.8 with语句")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("with")]),t._v(" 语句的作用是将代码的作用域设置到一个特定的对象中")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expression"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" statement"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" qs "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("querystring")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hostName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hostName\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" qs "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" search"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("querystring")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hostName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" hostName\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" href\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("使用 "),a("code",[t._v("with")]),t._v(" 语句关联了 location 对象，这意味着在 "),a("code",[t._v("with")]),t._v(" 语句的代码块内部，每个变量首先被认为是一个局部变量，而如果在局部环境中找不到该变量的定义，就会查询location对象中是否有同名的属性，如果发现了同名属性，则以 location 对象属性的值作为变量的值")])]),t._v(" "),a("div",{staticClass:"danger custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),a("p",[t._v("❗️严格模式下不允许使用 "),a("code",[t._v("with")]),t._v(" 语句，否则将视为语法错误"),a("br")]),t._v(" "),a("p",[t._v("❗️由于大量使用 "),a("code",[t._v("with")]),t._v(" 语句会导致性能下降，同时也会给调试代码造成困难，因此在开发大型应用时，不建议使用 with 语句")])]),t._v(" "),a("h3",{attrs:{id:"_3-6-9-switch语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-9-switch语句","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.6.9 switch语句")]),t._v(" "),a("blockquote",[a("ul",[a("li",[a("code",[t._v("switch")]),t._v(" 可以用任何数据类型 (在很多其它语言中只能使用数值)"),a("br")]),t._v(" "),a("li",[t._v("每个 "),a("code",[t._v("case")]),t._v(" 的值不一定是常量，可以是变量，甚至是表达式")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("' world'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Greeting was found.'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("break")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'goodbye'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Closing was found.'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("break")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("default")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Unexpected mesage was found.'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("25")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" num "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Less than 0.'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("break")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" num "),a("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" num "),a("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Between 0 and 10.'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("break")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" num "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" num "),a("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("20")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Between 10 and 20.'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("break")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("default")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'More than 20.'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("import",{attrs:{text:"switch 语句在比较值时使用的是全等操作符，因此不会发生类型转换"}})],1),t._v(" "),a("h2",{attrs:{id:"_3-7-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.7 函数")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("/* 执行完 return 语句后 停止 并 立即退出，位于 return 后面的任何代码都永远不会执行*/")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("sum")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num1 "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2\n  "),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Hello world'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 永远不会执行")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提醒")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("return")]),t._v("语句也可以不带任何返回值，这种情况下，函数在停止执行后将返回 "),a("code",[t._v("undefined")]),t._v("，这种做法一般用在需要提前停止函数执行而又不需要返回值的情况下")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("sayHi")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Hello '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" name "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("','")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" message"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 永远不会调用")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("严格模式对函数有一些限制:\n"),a("ol",[a("li",[t._v("不能把函数命名为"),a("code",[t._v("eval")]),t._v("或"),a("code",[t._v("arguments")])]),t._v(" "),a("li",[t._v("不能把参数命名为"),a("code",[t._v("eval")]),t._v("或"),a("code",[t._v("arguments")])]),t._v(" "),a("li",[t._v("不能出现两个命名参数同名的情况")])]),t._v(" "),a("blockquote",[a("p",[t._v("发生以上情况，就会导致语法错误，代码无法执行")])])])])]),t._v(" "),a("h3",{attrs:{id:"_3-7-1-理解参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-1-理解参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.7.1 理解参数")]),t._v(" "),a("blockquote",[a("p",[t._v("js 函数中不限制传递参数的多少，可以多传，也可以少传，因为它的参数是一个数组，即"),a("code",[t._v("arguments")]),t._v("对象")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("sayHi")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("// arguments 对象是 参数的集合，它是一个类数组对象，非 Array 的实例")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Hello '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" arguments"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("','")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" arguments"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("arguments")]),t._v("的值永远与对应命名参数的值保持一致")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("doAdd")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  arguments"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提醒")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("arguments对象 和 命名参数 "),a("import",{attrs:{text:"并不是访问共同的内存空间"}}),t._v("，他们的内存空间是独立的，但他们的值是同步的")],1)]),t._v(" "),a("li",[a("p",[t._v("如果只传入了一个参数，那么为 arguments[1] 设置的值将不会反映到命名参数中。这是因为 "),a("import",{attrs:{text:"arguments 对象的长度是由传入的参数个数决定的，不是由定义函数时的命名参数的个数决定的"}})],1)]),t._v(" "),a("li",[a("p",[t._v("没有传递值的命名参数将自动被赋予 "),a("code",[t._v("undefined")]),t._v(" 值，这就跟定义了变量但又没初始化一样")])]),t._v(" "),a("li",[a("p",[t._v("严格模式对如何使用"),a("code",[t._v("arguments")]),t._v("对象做了一些限制:")]),t._v(" "),a("ol",[a("li",[t._v("像前面那样即使把 arguments[1]设置为 10，num2 的值仍然还是 undefined")]),t._v(" "),a("li",[t._v("重写 arguments 的值会导致语法错误 (代码将不会执行)")])])])])]),t._v(" "),a("blockquote",[a("import",{attrs:{text:"ES 中的所有参数传递的都是值，不可能通过引用传递参数"}})],1),t._v(" "),a("h3",{attrs:{id:"_3-7-2-没有重载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-2-没有重载","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.7.2 没有重载")]),t._v(" "),a("blockquote",[a("p",[t._v("ES 函数没有签名，因为其参数是由包含"),a("code",[t._v("零")]),t._v("或"),a("code",[t._v("多个")]),t._v("值的数组来表示的。而没有函数签名，真正的重载是不可能做到的")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("addSomeNumber")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("addSomeNumber")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("200")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("addSomeNumber")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("100")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 300")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("通过检查传入函数中参数的类型和数量并作出不同的反应，可以模仿方法的重载")])])])},[],!1,null,null,null);v.options.__file="3.md";s.default=v.exports}}]);